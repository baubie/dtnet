###############################
# Coincidence Detection Model #
# Written by Brandon Aubie    #
###############################

set("T", 100)
BPsim= simulation("networks/BP.xml", "inputs/durations.xml")
BPsim = modsim(BPsim, "connection.SI:DTN.weight", -5)
BPsim = modsim(BPsim, "connection.OFF:DTN.weight", -3)
BPresults = run(BPsim,"/1/bp.sim",20,5,false)
BPresults = load("/1/bp.sim")

BP2sim = simulation("networks/BP_alt.xml", "inputs/durations.xml")
BP2results = run(BP2sim,"/1/bp_alt.sim",20,5,false)
BP2results = load("/1/bp_alt.sim")

# Setup graph size for paper
set("graph.width", 5.4)
set("graph.height", 4.3)

# Graph spike counts
graphspikecounts(BPresults, "DTN", "trial.main.duration", "BP_counts.eps")
graphspikecounts(BP2results, "DTN", "trial.main.duration", "BPalt_counts.eps")

# Graph spike trains
graphspiketrains(constrain(BPresults, "population.CN.mu", 400), "DTN", "BP_spiketrain.eps", 20, 0, 40)
graphspiketrains(constrain(BP2results, "population.CN.mu", 400), "DTN", "BPalt_spiketrain.eps", 20, 0, 40)

# Merging Results to compare first spike latencies
results = merge(constrain(BPresults, "population.CN.mu", 400), constrain(BP2results, "population.CN.mu", 400))
graphfirstspikelatency(results, "DTN", "trial.main.duration", "BP_latency_both.eps")

quit()
